(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{492:function(o,i,n){"use strict";n.r(i);n(6);var s={methods:{showConfirmDialog:function(){this.$unidooConfirmDialog.show(this.callback)},showConfirmDialogLoading:function(){this.$unidooConfirmDialog.show(this.callbackDelay,"Do you confirm this action? (wait the end of treatment before closing the dialog)")},callback:function(){console.log(this),this.$unidooAlert.showSuccess("Callback has been called")},callbackDelay:function(){var o=this;return console.log("starting slow promise"),new Promise((function(i){setTimeout((function(){i("slow"),console.log("slow promise is done"),o.$unidooAlert.showSuccess("Callback has been called and treatment has been successfully completed")}),2e3)}))}}},t=n(1),l=Object(t.a)(s,(function(){var o=this.$createElement,i=this._self._c||o;return i("v-app",[i("UnidooAlert"),this._v(" "),i("v-row",[i("v-col",{staticClass:"mb-2 mt-4"},[i("v-btn",{on:{click:this.showConfirmDialog}},[this._v("Open confirm dialog")])],1),this._v(" "),i("v-col",{staticClass:"mb-2 mt-4"},[i("v-btn",{on:{click:this.showConfirmDialogLoading}},[this._v("Open confirm dialog (loading)")])],1)],1),this._v(" "),i("unidoo-confirm-dialog")],1)}),[],!1,null,null,null);i.default=l.exports}}]);